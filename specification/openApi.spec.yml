openapi: 3.0.0
info:
  title: API server for the demo project 'Six Cities'
  description: List of available API endpoints and routes for the demo project 'Six Cities'
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags: 
  - name: offers
    description: Действия с объявлениями
  - name: users
    description: Действия с пользователями
  - name: comments
    description: Действия с комментариями
paths:
 /offers:
  get: 
   tags:
     - offers
   summary: Получить список офферов
   description: Получение всех офферов
   responses:
     '200':
      description: Список успешно получен
      content:
        application/json:
         schema:
          $ref: '#/components/schemas/offer'
     '400':
       description: Некорректный запрос
       content:
        application/json:
         schema: 
          $ref: '#/components/schemas/Error'

  post:
   tags:
    - offers
   summary: Создание оффера
   description: Создает оффер
   requestBody:
    description: Информация для создания оффера
    content:
     application/json:
      schema:
       $ref: '#/components/schemas/offer'

   responses:
    '200':
     description: Предложение успешно создано
     content:
      application/json:
       schema:
        $ref: '#/components/schemas/offer'
    '400':
     description: Некорректный запрос
     content:
      application/json:
       schema: 
         $ref: '#/components/schemas/Error'

 /offers/{offerId}:
  put:
   tags:
     - offers
   summary: Редактирует оффер
   description: Редактирует существующий оффер
   requestBody:
    description: Информация для обновления оффера
    content:
     application-json:
      schema:
       $ref: '#/components/schemas/offer' 
   responses:
     '200':
      description: Предложение успешно отредактировано
      content:
       application-json:
        schema:
         $ref: '#/components/schemas/offer'
     '400':
      description: Некорректный запрос
      content:
       application/json:
        schema: 
         $ref: '#/components/schemas/Error'
  delete:
   tags:
     - offers
   summary: Удаление предложения
   description: Удаляет существующее предложение
   responses:
    '200':
     description: Предложение успешно удалено
    '400':
     description: Некорректный запрос
     content:
      application/json:
       schema: 
        $ref: '#/components/schemas/Error'
          

 /users/register:
  post:
   tags: 
        - users
   summary: Регистрация пользователя
   description: Регистрация нового пользователя
   requestBody:
    required: true
    content:
      application/json:
       schema:
        $ref: '#/components/schemas/user'
   responses:
     '200': 
      description: Пользователь успешно зарегистрирован
      content:
        application/json:
         schema:
          $ref: '#/components/schemas/user'     
     '400': 
      description: Ошибка
      content:
        application/json:
         schema:
          $ref: '#/components/schemas/Error' 

 /users/login:
  post: 
   tags:
       - users
   summary: Авторизация пользователя
   description: Авторизует зарегистрированного пользователя
   requestBody: 
    description: Информация для авторизации пользователя.
    content: 
     application/json:
      schema: 
       $ref: '#/components/schemas/createUser'
    required: true
   responses:
     "201":
      description: Пользователь авторизован. Объект пользователя
      content:
       application/json:
         schema:
          $ref: '#/components/schemas/user'
 
 /users/logout:
  post:
   tags:
        - users
   summary: Сброс авторизации пользователя
   description: Выход пользователя из своего аккаунта

   requestBody:
    content:
      application-json:
        schema:
          $ref: '#/components/schemas/user'

   responses:
    '204':
      description: Пользователь успешно вышел

 /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Получение комментариев
      description: Получение списка комментариев

      responses:
        '200':
          description: Список комментариев успешно получен
          content:
            application-json:
              schema:
                $ref: '#/components/schemas/comment'
        '404':
          description: Предложение с указанным ID не найдено

    post:
      tags:
        - comments
      summary: Добавление комментария
      description: Добавляет комментария к предложению

      requestBody:
        description: Информация о добавляемом комментарии

        content:
          application-json:
            schema:
              $ref: '#/components/schemas/comment'

      responses:
        '200':
          description: Комментарий добавлен
          content:
            application-json:
              schema:
                $ref: '#/components/schemas/comment'
        '404':
          description: Предложение с указанным ID не найдено
        '400':
          description: Ошибка валидации. Переданы не все, необходимые для создания предложения, данные
        '401':
          description: Вы не можете оставлять комментарии, т.к. не авторизованы


components:
  schemas:
    Error:
     type: object
     properties:
       message: 
        type: string
        description: Описание ошибки
    
    offer: 
     type: object
     properties: 
      name:
       type: string
       example: Hotel

      description:
       type: string
       example: Super hotel
      
      createdDate: 
       type: string
       example: 2024-02-11T15:44:48.520Z

      city: 
       type: string
       example: Brussels

      previewImage:
       type: string
       example: photo/preview/AzureWaves

      photos:
       type: string
       example: photo/photo1 photo/photo2
       
      premium: 
       type: boolean
       example: false

      favourite: 
       type: boolean
       example: true

      rating: 
       type: number
       example: 2

      type: 
       type: string
       example: house

      numberOfRooms: 
       type: number
       example: 1

      numberOfGuests: 
       type: number
       example: 3

      price: 
       type: number
       example: 5632

      facilities: 
       type: array
       items: 
        type: string
       example: Laptop friendly workspace   

      numberOfComments: 
       type: number
       example: 240

    createUser:
     type: object
     
     properties:
      username: 
       type: string
       example: Кекс
      
      email:
       type: string
       example: keksdrey@keks.com

      password: 
       type: string
       example: keks

      avatarUrl:
       type: string
       example: /photo/avatar/keks

      isPro:
       type: boolean
       example: true

    user:
     type: object

     properties:
      id: 
       type: string
       example: 6329c3d6a04ab1061c6425ea

      email: 
       type: string
       example: keks@htmlacademy.ru
      
      username:
       type: string
       example: Андрей

      password: 
       type: string
       example: keks

      avatarUrl:
       type: string
       example: /photo/avatar/keks

      isPro:
       type: boolean
       example: true

    comment:
     type: object

     properties:
      text:
       type: string
       description: Текст комментария
       example: Лучший отель, который я только видел! Советую всем!
      rating:
       type: number
       description: Рейтинг пользователя для предложения
       minimum: 1
       maximum: 5
       example: 1
      user:
       type: object
       description: Информация об авторе комментария
       example: {
            email: 'aleshaaaa@gmail.com',
            username: 'Алеша',
            avatarUrl: '/photo/avatar/alesha',
            password: '123456',
            isPro: true
          } 